import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;


@Controller
public class EgovSampleController {
	
    @RequestMapping(value="/sample/getAddrApi.do")
    public void getAddrApi(HttpServletRequest req, ModelMap model, HttpServletResponse response) throws Exception {
		// �슂泥�蹂��닔 �꽕�젙
    String currentPage = req.getParameter("currentPage");    //�슂泥� 蹂��닔 �꽕�젙 (�쁽�옱 �럹�씠吏�. currentPage : n > 0)
		String countPerPage = req.getParameter("countPerPage");  //�슂泥� 蹂��닔 �꽕�젙 (�럹�씠吏��떦 異쒕젰 媛쒖닔. countPerPage 踰붿쐞 : 0 < n <= 100)
		String confmKey = req.getParameter("confmKey");          //�슂泥� 蹂��닔 �꽕�젙 (�듅�씤�궎)
		String keyword = req.getParameter("keyword");            //�슂泥� 蹂��닔 �꽕�젙 (�궎�썙�뱶)
		// OPEN API �샇異� URL �젙蹂� �꽕�젙
		String apiUrl = "http://www.juso.go.kr/addrlink/addrLinkApi.do?currentPage="+currentPage+"&countPerPage="+countPerPage+"&keyword="+URLEncoder.encode(keyword,"UTF-8")+"&confmKey="+confmKey;
		URL url = new URL(apiUrl);
    	BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream(),"UTF-8"));
    	StringBuffer sb = new StringBuffer();
    	String tempStr = null;

    	while(true){
    		tempStr = br.readLine();
    		if(tempStr == null) break;
    		sb.append(tempStr);								// �쓳�떟寃곌낵 XML ���옣
    	}
    	br.close();
    	response.setCharacterEncoding("UTF-8");
		response.setContentType("text/xml");
		response.getWriter().write(sb.toString());			// �쓳�떟寃곌낵 諛섑솚
    }
}
