/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-03-31 03:15:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1585545986095L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/창현/FirstSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BoardMaven2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"//unpkg.com/bootstrap@4/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script src='//unpkg.com/jquery@3/dist/jquery.min.js'></script>\r\n");
      out.write("<script src='//unpkg.com/popper.js@1/dist/umd/popper.min.js'></script>\r\n");
      out.write("<script src='//unpkg.com/bootstrap@4/dist/js/bootstrap.min.js'></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container my-5\">\r\n");
      out.write("\t\t<p class=\"h2 text-center\">게 시 판</p>\r\n");
      out.write("\t\t<div id=\"result\"></div>\r\n");
      out.write("\t\t<div class=\"text-center my-5\">\r\n");
      out.write("\t\t\t<form action=\"boardList\" method=\"get\">\r\n");
      out.write("\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t<select class=\"input-group-prepend custom-select col-lg-2\"\r\n");
      out.write("\t\t\t\t\t\tid=\"field\" name=\"field\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\">선택하세요</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"title\">제목</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"content\">내용</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"writer\">작성자</option>\r\n");
      out.write("\t\t\t\t\t</select> <input type=\"text\" id=\"word\" name=\"word\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control input-group-text\">\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"search\" name=\"search\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\">검색</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"text-right\">\r\n");
      out.write("\t\t\t<a href=\"boardInsert\" class=\"btn btn-outline-dark btn-sm\">글쓰기</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\tgetData(1, \"\", \"\");\r\n");
      out.write("\t\t\t$(\"#search\").click(function() {\r\n");
      out.write("\t\t\t\tif ($(\"#field\").val() == \"\") {\r\n");
      out.write("\t\t\t\t\talert(\"검색 내용을 선택하세요\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tgetData(1, $(\"#field\").val(), $(\"#word\").val());\r\n");
      out.write("\t\t\t\t$(\"#word\").val(\"\");\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\tfunction getData(pageNum, field, word) {\r\n");
      out.write("\t\t\t$.getJSON(\"boardList\", {\r\n");
      out.write("\t\t\t\t\"pageNum\" : pageNum,\r\n");
      out.write("\t\t\t\t\"field\" : field,\r\n");
      out.write("\t\t\t\t\"word\" : word\r\n");
      out.write("\t\t\t}, function(data) {\r\n");
      out.write("\t\t\t\t$(\"#result\").empty();\r\n");
      out.write("\t\t\t\t$(\"#result\").append(\r\n");
      out.write("\t\t\t\t\t\t\"<p class='h3'>게시물 수 : \" + data.count + \"</p>\")\r\n");
      out.write("\t\t\t\tvar htmlStr = \"\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<table class='table small table-bordered my-5'>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<thead><tr>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<th style='width: 10%'>번호</th>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<th style='width: 40%'>제목</th>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<th style='width: 20%'>작성자</th>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<th style='width: 20%'>작성일</th>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"<th style='width: 10%'>조회수</th>\";\r\n");
      out.write("\t\t\t\thtmlStr += \"</tr></thead>\";\r\n");
      out.write("\t\t\t\tfor (i = 0; i < data.list.length; i++) {\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<tr>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<td>\" + eval(data.rowNo - i) + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<td><a href='boardView?num=\" + data.list[i].num\r\n");
      out.write("\t\t\t\t\t\t\t+ \"'>\" + data.list[i].title + \"</a></td>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<td>\" + data.list[i].writer + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<td>\" + data.list[i].regdate + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"<td>\" + data.list[i].hitcount + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtmlStr += \"</tr>\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#result\").append(htmlStr);\r\n");
      out.write("\t\t\t\thtmlStr += \"</table>\";\r\n");
      out.write("\t\t\t\t$(\"#result\").append(\r\n");
      out.write("\t\t\t\t\t\t\"<div align='center'>\" + data.pageHtml + \"</div>\");\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
